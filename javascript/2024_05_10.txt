let arr = ["Java", "Python", "Ruby", "C++"];


- `indexOf`
- 특정 요소를 찾아서 index 값을 반환 , 없을 시 -1 반환

let result1 = arr.indexOf("Python");
console.log(result1); //1


- `join`
- 인자로 전달된 값을 바탕으로 모든 배열 요소를 연결하여 '하나의 String 값'으로 반환

//아무런 구분자 없이 그대로 출력 
let result2 = arr.join("");
console.log(result2); //JavaPythonRubyC++

//구분자 사용
result2 = arr.join(",");
console.log(result2); //Java,Python,Ruby,C++ 


- `reverse`
- 배열 요소의 순서를 뒤집는 기능

console.log("before reverse : " + arr); //Java,Python,Ruby,C++
arr.reverse();
console.log("before reverse : " + arr); //C++,Ruby,Python,Java 반대




동적으로 요소를 추가하거나 빼고 싶을 경우 아래 함수 사용한다 (동적 요소 추가 및 삭제)

- `push`
- 배열의 가장 끝에 Element 를 추가

arr.push("안녕?");
console.log(arr); //['C++', 'Ruby', 'Python', 'Java', '안녕?']


- `pop`
- 배열의 가장 끝에 Element 를 삭제

let popData= arr.pop(); //안녕?
console.log(arr); //['C++', 'Ruby', 'Python', 'Java']


- `unshift`
- 배열에 가장 앞쪽에 Element 를 추가

arr.unshift("안녕?");
console.log(arr); //['안녕?', 'C++', 'Ruby', 'Python', 'Java']


- `shift`
- 배열에 가장 앞쪽에 Element 를 삭제

let shiftData= arr.shift(); //안녕?
console.log(arr); //['C++', 'Ruby', 'Python', 'Java']